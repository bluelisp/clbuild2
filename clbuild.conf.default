# Optional clbuild configuration options.

# ############################################################
#  This file is for defaults only. To override them,
#  create a configuration file clbuild.conf instead.
# ############################################################

# After startup, clbuild sources
#   1. clbuild.conf.default (this file)
#      containing only defaults (and various examples)
#   2. clbuild.conf (if it exists)
#      with user-specific configuration 


#### personal initfile

# By default, we suppress loading of ~/.sbclrc, since users very often
# have code in it that is incompatible with our fresh installation.
#
# Uncomment the "unset" line in clbuild.conf to suppress passing a
#  --userinit argument to the lisp.

USER_INIT=/dev/null
#unset USER_INIT

#### binary configuration
####
#### Set a lisp implementation type and binary name.

# SBCL is the default.

# Configuration for SBCL.
# (Note that you may also want to set SBCL_HOME here.)
LISP_IMPLEMENTATION_TYPE=sbcl;     LISP_BINARY=sbcl

# Configuration for Clozure CL.
#
# Note that you may also want to set CCL_DEFAULT_DIRECTORY here.  But if it
# isn't set, clbuild defaults it to the directory of $LISP_BINARY.
# 
# This differs from standard CCL behaviour in that CCL uses the
# directory of the image, not the binary.  But since the image is stored
# in the clbuild directory, that wouldn't work.
#
#LISP_IMPLEMENTATION_TYPE=ccl;     LISP_BINARY=lx86cl64

# Configuration for other implementations:
#
#LISP_IMPLEMENTATION_TYPE=clisp;   LISP_BINARY=clisp
#LISP_IMPLEMENTATION_TYPE=alisp;   LISP_BINARY=alisp
#LISP_IMPLEMENTATION_TYPE=cmu;     LISP_BINARY=lisp
#LISP_IMPLEMENTATION_TYPE=ecl;     LISP_BINARY=ecl

#### processing command line arguments
####
#### if the user has used --implementation, --type, or --binary on the
#### command line, the variables FORCE_LISP_IMPLEMENTATION_TYPE and/or
#### FORCE_LISP_BINARY will be set.
####
#### If this file does nothing special to them, they will override the
#### defaults for LISP_IMPLEMENTATION_TYPE and LISP_BINARY.
####
#### However, clbuild.conf can tweak the FORCE_ variables if it so desires.

# Possible use cases are:

# a. you want clbuild.conf to override the command line unconditionally.
#    In that case you would uncomment the following lines:
#unset FORCE_LISP_IMPLEMENTATION_TYPE
#unset FORCE_LISP_BINARY

# b. you want clbuild.conf to accept FORCE_LISP_IMPLEMENTATION_TYPE
#    and/or FORCE_LISP_BINARY, but default one of them based on the
#    other intelligently.
#    Example:
#
#case $FORCE_LISP_IMPLEMENTATION_TYPE in
#    lx86cl|lx86cl64)
#	FORCE_LISP_IMPLEMENTATION_TYPE=ccl
#	;;
#    lisp)
#	FORCE_LISP_IMPLEMENTATION_TYPE=cmu
#	;;
#esac
