#!/usr/bin/env bash
# (we use env for non-Linux OSes)
#
# Wrapper script for Lisp invocation with quicklisp preloaded.
# Based on code from clbuild by Luke Gorrie and contributors.

###
### Initialize $base variable
###
### This code can't be factored out into internal/ because we need $base
### set before we can find internal/
###

# exit on any error
set -e

# MacOS doesn't have "readlink -e", needed to follow symlinks.
# We hack it using readlink, dirname, and cd.
readlink_e() {
    self="$0"
    while test -h "$self"; do
	cd "$(dirname $self)"
	self=`readlink "$self"`
    done
    cd "$(dirname $self)"
    pwd
}
base=$(readlink_e)
internal=$base/internal


###
### early options
###
while :; do
    case $1 in
	--implementation)
	    FORCE_LISP_BINARY=$2
	    FORCE_LISP_IMPLEMENTATION_TYPE=$(basename $FORCE_LISP_BINARY) 
	    shift 2
	    ;;
	--binary)
	    FORCE_LISP_BINARY=$2
	    shift 2
	    ;;
	--type)
	    FORCE_LISP_IMPLEMENTATION_TYPE=$2
	    shift 2
	    ;;
	--debug)
	    set -x
	    shift
	    ;;
	*)
	    break
	    ;;
    esac
done

###
### Load configuration files
###
source "$base/clbuild.conf.default"
if test -f "$base/clbuild.conf"; then
    source "$base/clbuild.conf"
fi

# now that user's clbuild.conf has had a change to override FORCE_LISP_*,
# we set the real options accordingly.  This order was chosen to achieve
# the following goals:
#   - command line options override the ordinary preference in clbuild.conf
#   - clbuild.conf can override the command line options if it really wants to
#   - in particular, clbuild.conf can do clever things to default one
#     variable from the other
if test -n "$FORCE_LISP_BINARY"; then
    LISP_BINARY=$FORCE_LISP_BINARY
fi
if test -n "$FORCE_LISP_IMPLEMENTATION_TYPE"; then
    LISP_IMPLEMENTATION_TYPE=$FORCE_LISP_IMPLEMENTATION_TYPE
fi

# also export the variables, so that a lisp started by a subprocess also
# takes them into account, e.g. in the
#   "clbuild --type xxx slime" -> emacs -> "clbuild lisp"
# chain of processes.
export FORCE_LISP_BINARY
export FORCE_LISP_IMPLEMENTATION_TYPE


###
### Load sources
###
source $internal/util.sh
source $internal/ql.sh
source $internal/slime.sh
source $internal/impl.sh

###
### Choose a Lisp
###

configure_implementation

###
### Main commands
###

source $internal/main.sh
